['#ifndef', 'XML2JSON_HPP_INCLUDED', '#define', 'Copyright', 'Alan', 'Zhuang', 'Cheedoong', 'HKUST', 'Updated', 'latest', 'version', 'rapidjson', 'Tencent', '#include', 'iostream', 'string', 'cctype', 'rapidxml', 'rapidxml_utils', 'rapidxml_print', 'document', 'prettywriter', 'encodedstream', 'stringbuffer', 'reader', 'writer', 'filereadstream', 'filewritestream', 'error', 'Start', 'This', 'part', 'configurable', 'static', 'const', 'char', 'xml2json_text_additional_name', 'text', 'xml2json_attribute_name_prefix', 'Example', 'node_name', 'attribute_name', 'attribute_value', 'value', 'bool', 'xml2json_numeric_support', 'false', 'number', 'true', 'Avoided', 'namespace', 'pollution', 'xml2json_has_digits_only', 'input', 'hasDecimal', 'nullptr', 'return', 'treat', 'empty', 'probably', 'will', 'runPtr', 'while', 'else', 'found', 'dots', 'isalpha', 'void', 'xml2json_to_array_form', 'name', 'rapidjson::Value', 'jsvalue', 'jsvalue_chd', 'rapidjson::Document::AllocatorType', 'allocator', 'jsvalue_target', 'target', 'some', 'operation', 'this', 'must', 'partially', 'because', 'SetString', 'FindMember', 'IsArray', 'PushBack', 'RemoveMember', 'AddMember', 'jsvalue_array', 'SetArray', 'xml2json_add_attributes', 'rapidxml::xml_node', 'xmlnode', 'rapidxml::xml_attribute', 'myattr', 'first_attribute', 'next_attribute', 'std::string', 'c_str', 'double', 'std::strtod', 'SetDouble', 'long', 'std::strtol', 'SetInt', 'xml2json_traverse_node', 'cout', 'type', 'endl', 'SetObject', 'xmlnode_chd', 'classified', 'discussion', 'rapidxml::node_data', 'rapidxml::node_cdata', 'case', 'pure_text', 'then', 'addmember', 'rapidxml::node_element', 'first_node', 'count_children', 'attr', 'SetNull', 'rapidjson::StringRef', 'complex', 'std::map', 'name_count', 'next_sibling', 'current_name', 'name_ptr', 'NULL', 'GetString', 'std::cerr', 'data', 'std::endl', 'xml2json', 'xml_str', 'file', 'fdoc', 'track_orig', 'could', 'serve', 'another', 'rapidxml::xml_document', 'xml_doc', 'parse', 'const_cast', 'rapidjson::Document', 'js_doc', 'GetAllocator', 'jsvalue_name', 'rapidjson::StringBuffer', 'buffer', 'rapidjson::Writer', 'Accept', 'delete', '#endif']
